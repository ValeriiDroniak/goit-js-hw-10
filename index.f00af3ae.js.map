{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,iBAKA,MAGMC,EAAO,CACTC,UAAWC,SAASC,cAAc,eAClCC,UAAWF,SAASC,cAAc,iBAClCE,YAAaH,SAASC,cAAc,kBAiBxC,SAASG,EAAoBF,GACzBG,IAEIH,EAAUI,OAAS,GACnBV,EAAAW,OAAOC,KA1BM,8DAoCrB,SAA6BN,GACzB,MAAMO,EAASP,EAAUQ,KAAI,EAACC,KAAEA,EAAIC,MAAEA,KAC3B,yCAESA,EAAMC,6CACfF,EAAKG,4BAEbC,KAAK,KAERjB,EAAKI,UAAUc,UAAYP,C,CAjBvBQ,CAAoBf,GAGC,IAArBA,EAAUI,QAiBlB,UAA2BY,QAAEA,EAAOC,WAAEA,EAAUC,UAAEA,IAC9C,MAAMX,EAAS,0CAEUS,gDACGC,+CACDE,OAAOC,OAAOF,4BAGzCtB,EAAKK,YAAYa,UAAYP,C,CAxBzBc,CAAkBrB,EAAU,G,CA2BpC,SAASG,IACLP,EAAKI,UAAUc,UAAY,GAC3BlB,EAAKK,YAAYa,UAAY,E,CAGjC,SAASQ,IACLnB,IAEAT,EAAAW,OAAOkB,QAlEW,2C,CAOtB3B,EAAKC,UAAU2B,iBAAiB,QAASC,GAEzC,SAAkBC,GACd,MAAMC,EAAaD,EAAIE,OAAOC,MAAMC,OAE/BH,GChB8BlB,EDmBhBkB,EClBZI,MAAM,uCAAoBtB,oDAAyBuB,MAAKC,IAC3D,GAAKA,EAAEC,GAGH,OAAOD,EAAEE,OAFT,MAAM,IAAIC,MAAM,cAAcH,EAAEI,SAEjB,KDedL,KAAK9B,GACLoC,MAAMhB,GAJXnB,ICjBO,IAAwBM,C,GDEhB,K","sources":["src/index.js","src/fetchCountries.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport fetchCountries from './fetchCountries';\nimport './css/styles.css';\nconst debounce = require('lodash.debounce');\n\nconst DEBOUNCE_DELAY = 300;\nconst INFO_MESSAGE = 'Too many matches found. Please enter a more specific name.';\nconst ERROR_MESSAGE = 'Oops, there is no country with that name';\nconst refs = {\n    searchBox: document.querySelector('#search-box'),\n    countries: document.querySelector('.country-list'),\n    countryInfo: document.querySelector('.country-info')\n}\n\nrefs.searchBox.addEventListener('input', debounce(onSearch, DEBOUNCE_DELAY));\n\nfunction onSearch(evt) {\n    const searchText = evt.target.value.trim();\n\n    if (!searchText) {\n        removeMarkup();\n    } else {\n        fetchCountries(searchText)\n            .then(renderSearchCountry)\n            .catch(onFetchError);\n    }\n}\n\nfunction renderSearchCountry(countries) {\n    removeMarkup();\n\n    if (countries.length > 10) {\n        Notify.info(INFO_MESSAGE);\n    } else {\n        markupListCountries(countries);\n    }\n\n    if (countries.length === 1) {\n        markupCountryInfo(countries[0]);\n    }\n}\n\nfunction markupListCountries(countries) {\n    const markup = countries.map(({ name, flags }) => {\n        return `\n        <li>\n            <img src=\"${flags.svg}\" alt=\"flag\" width=\"50\">\n             ${name.official}\n        </li>`\n    }).join(' ');\n\n    refs.countries.innerHTML = markup;\n}\n\nfunction markupCountryInfo({ capital, population, languages }) {\n    const markup = `\n    <ul>\n        <li>Capital: <span>${capital}</span></li>\n        <li>Population: <span>${population}</span></li>\n        <li>Languages: <span>${Object.values(languages)}</span></li>\n    </ul>`;\n\n    refs.countryInfo.innerHTML = markup;\n}\n\nfunction removeMarkup() {\n    refs.countries.innerHTML = '';\n    refs.countryInfo.innerHTML = '';\n}\n\nfunction onFetchError() {\n    removeMarkup();\n\n    Notify.failure(ERROR_MESSAGE);\n} ","const BASE_URL = 'https://restcountries.com/v3.1';\nconst FILTER = 'name,capital,population,flags,languages'\n\nexport default function fetchCountries(name) {\n    return fetch(`${BASE_URL}/name/${name}?fields=${FILTER}`).then(r => {\n        if (!r.ok) {\n            throw new Error(`is not ok: ${r.status}`);\n        } else {\n            return r.json();\n        }\n    });\n}"],"names":["$h6c0i","parcelRequire","$b8f9b7833fa37166$var$refs","searchBox","document","querySelector","countries","countryInfo","$b8f9b7833fa37166$var$renderSearchCountry","$b8f9b7833fa37166$var$removeMarkup","length","Notify","info","markup","map","name","flags","svg","official","join","innerHTML","$b8f9b7833fa37166$var$markupListCountries","capital","population","languages","Object","values","$b8f9b7833fa37166$var$markupCountryInfo","$b8f9b7833fa37166$var$onFetchError","failure","addEventListener","$l1Gdk","evt","searchText","target","value","trim","fetch","then","r","ok","json","Error","status","catch"],"version":3,"file":"index.f00af3ae.js.map"}