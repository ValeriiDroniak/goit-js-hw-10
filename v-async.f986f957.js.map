{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SCGeC,eAAAC,EAA8BC,GACzC,MAAMC,QAAiBC,MAAM,uCAAoBF,oDACjD,aAAaC,EAASE,M,kBDA1B,MACMC,EAAe,6DACfC,EAAgB,2CAChBC,EAAO,CACTC,UAAWC,SAASC,cAAc,eAClCC,UAAWF,SAASC,cAAc,iBAClCE,YAAaH,SAASC,cAAc,kBAsDxC,SAASG,IACLN,EAAKI,UAAUG,UAAY,GAC3BP,EAAKK,YAAYE,UAAY,E,CArDjCP,EAAKC,UAAUO,iBAAiB,QAASC,GAEzCjB,eAAwBkB,GACpB,MAAMC,EAAaD,EAAIE,OAAOC,MAAMC,OAE/BH,GACDL,IAGJ,KASJ,SAA6BF,GACzBE,IAEIF,EAAUW,OAAS,GACnBzB,EAAA0B,OAAOC,KAAKnB,GAEZE,EAAKI,UAAUG,UAQvB,SAA6BH,GACzB,OAAOA,EAAUc,KAAI,EAACxB,KAAEA,EAAIyB,MAAEA,KACnB,yCAESA,EAAMC,6CACf1B,EAAK2B,4BAEbC,KAAK,I,CAfuBC,CAAoBnB,GAG1B,IAArBA,EAAUW,SACVf,EAAKK,YAAYE,UAczB,UAA2BiB,QAAEA,EAAOC,WAAEA,EAAUC,UAAEA,IAC9C,MAAO,0CAEkBF,gDACGC,+CACDE,OAAOC,OAAOF,2B,CAnBRG,CAAkBzB,EAAU,I,CAhBzD0B,OAFwBrC,EAAekB,G,CAGzC,MAAOoB,GA4CTzC,EAAA0B,OAAOgB,QAAQjC,E,IAlEI,K","sources":["src/v-async.js","src/v2-fetchCountries.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport fetchCountries from './v2-fetchCountries';\nimport './css/styles.css';\nconst debounce = require('lodash.debounce');\n\nconst DEBOUNCE_DELAY = 300;\nconst INFO_MESSAGE = 'Too many matches found. Please enter a more specific name.';\nconst ERROR_MESSAGE = 'Oops, there is no country with that name';\nconst refs = {\n    searchBox: document.querySelector('#search-box'),\n    countries: document.querySelector('.country-list'),\n    countryInfo: document.querySelector('.country-info')\n}\n\nrefs.searchBox.addEventListener('input', debounce(onSearch, DEBOUNCE_DELAY));\n\nasync function onSearch(evt) {\n    const searchText = evt.target.value.trim();\n\n    if (!searchText) {\n        removeMarkup();\n    }\n\n    try {\n        const countries = await fetchCountries(searchText);\n\n        renderSearchCountry(countries);\n    } catch (error) {\n        onFetchError();\n    }\n}\n\nfunction renderSearchCountry(countries) {\n    removeMarkup();\n\n    if (countries.length > 10) {\n        Notify.info(INFO_MESSAGE);\n    } else {\n        refs.countries.innerHTML = markupListCountries(countries);\n    }\n\n    if (countries.length === 1) {\n        refs.countryInfo.innerHTML = markupCountryInfo(countries[0]);\n    }\n}\n\nfunction markupListCountries(countries) {\n    return countries.map(({ name, flags }) => {\n        return `\n        <li>\n            <img src=\"${flags.svg}\" alt=\"flag\" width=\"50\">\n             ${name.official}\n        </li>`\n    }).join(' ');\n}\n\nfunction markupCountryInfo({ capital, population, languages }) {\n    return `\n    <ul>\n        <li>Capital: <span>${capital}</span></li>\n        <li>Population: <span>${population}</span></li>\n        <li>Languages: <span>${Object.values(languages)}</span></li>\n    </ul>`;\n}\n\nfunction removeMarkup() {\n    refs.countries.innerHTML = '';\n    refs.countryInfo.innerHTML = '';\n}\n\nfunction onFetchError() {\n    Notify.failure(ERROR_MESSAGE);\n} ","const BASE_URL = 'https://restcountries.com/v3.1';\nconst FILTER = 'name,capital,population,flags,languages'\n\nexport default async function fetchCountries(name) {\n    const response = await fetch(`${BASE_URL}/name/${name}?fields=${FILTER}`);\n    return await response.json();\n}"],"names":["$h6c0i","parcelRequire","async","$8cc38b1562d66038$export$2e2bcd8739ae039","name","response","fetch","json","$4d5456e0780dd53a$var$INFO_MESSAGE","$4d5456e0780dd53a$var$ERROR_MESSAGE","$4d5456e0780dd53a$var$refs","searchBox","document","querySelector","countries","countryInfo","$4d5456e0780dd53a$var$removeMarkup","innerHTML","addEventListener","$l1Gdk","evt","searchText","target","value","trim","length","Notify","info","map","flags","svg","official","join","$4d5456e0780dd53a$var$markupListCountries","capital","population","languages","Object","values","$4d5456e0780dd53a$var$markupCountryInfo","$4d5456e0780dd53a$var$renderSearchCountry","error","failure"],"version":3,"file":"v-async.f986f957.js.map"}